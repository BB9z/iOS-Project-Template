project 'pods-combine.xcodeproj'

# Disable sending stats
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

platform :ios, '9.0'

inhibit_all_warnings!

target 'pods-combine' do
    # 这里应只包含编译源码需要的依赖，二进制包直接主项目导入
    pod 'SDWebImage'
    pod 'XXNibBridge'
end

pre_install do |installer|
    installer.pod_targets.each do |target|
        # 遍历下载依赖的目录
        aPodDir = installer.sandbox.pod_dir(target.pod_name)

        # 把 base.lproj 改名为 Base.lproj
        Dir.glob(File.join(aPodDir, '**', '*.lproj')).each do |stringFile|
            if (File.basename(stringFile) == 'base.lproj')
                dst = File.join(File.dirname(stringFile), 'Base.lproj');
                File.rename(stringFile, dst)
            end
        end
    end
end

post_install do |pi|
    # 临时修正 deployment target 不支持的问题，并且让 Pod 跟随 App 支持的版本进行编译
    # https://github.com/CocoaPods/CocoaPods/issues/7314
    fix_deployment_target(pi)
end

def fix_deployment_target(pod_installer)
    if !pod_installer
        return
    end
    puts "Make the pods deployment target version the same as our target"
    
    project = pod_installer.pods_project
    deploymentMap = {}
    project.build_configurations.each do |config|
        deploymentMap[config.name] = config.build_settings['IPHONEOS_DEPLOYMENT_TARGET']
    end
    # p deploymentMap
    
    project.targets.each do |t|
        puts "  #{t.name}"
        t.build_configurations.each do |config|
            oldTarget = config.build_settings['IPHONEOS_DEPLOYMENT_TARGET']
            newTarget = deploymentMap[config.name]
            if oldTarget == newTarget
                next
            end
            puts "    #{config.name} deployment target: #{oldTarget} => #{newTarget}"
            config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = newTarget
        end
    end
end
